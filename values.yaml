global:
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "500m"

  environment: "production" # development, staging, production

  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 1000

eureka:
  replicaCount: 1
  serviceName: "spring-eureka-server "

  image:
    repository: marouanedbibih/eureka
    tag: "latest"
    pullPolicy: IfNotPresent

  containerPort: 8761

  # Configuration for ConfigMap
  config:
    springProfilesActive: "prod"
    applicationName: "eureka-server"
    serverPort: "8761"
    additional: {}

  # Secrets for sensitive data
  secrets:
    javaOpts: "-Xms256m -Xmx512m"
    additional: {}

  # Resources (can override global if needed)
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "500m"

  deployment:
    podAnnotations: {}

  service:
    type: ClusterIP
    port: 8761
    targetPort: 8761
    annotations: {}

  ingress:
    enabled: true
    className: nginx
    annotations:
      kubernetes.io/ingress.class: "nginx"
      nginx.ingress.kubernetes.io/rewrite-target: /
    hosts:
      - host: eureka.marouanedbibih.engineer
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: eureka-tls
        hosts:
          - eureka.marouanedbibih.engineer

mysql:
  # Enable/disable MySQL deployment as part of this chart
  enabled: true

  # Configuration for internal MySQL (when enabled=true)
  image:
    registry: docker.io
    repository: bitnami/mysql
    tag: 8.0.34-debian-11-r56

  architecture: replication
  auth:
    rootPassword: rootpassword123
    username: app_user
    password: app_password123
    database: app_db
    replicationPassword: replication_password123

  primary:
    persistence:
      enabled: true
      storageClass: ""
      size: 1Gi

  secondary:
    replicaCount: 1
    persistence:
      enabled: true
      storageClass: ""
      size: 1Gi

  service:
    type: ClusterIP
    port: 3306

  # Configuration for external MySQL (when enabled=false)
  external:
    host: "external-mysql.example.com"
    port: 3306

clientService:
  replicaCount: 1

  image:
    repository: marouanedbibih/client-service
    tag: "latest"
    pullPolicy: Always

  containerPort: 8801

  # Configuration for ConfigMap
  config:
    springProfilesActive: "prod"
    applicationName: "client-service"
    database:
      name: "app_db"
    jpa:
      hibernateDdlAuto: "update"
    logging:
      hibernateLevel: "debug"
      springLevel: "info"
    additional: {}

  # Secrets for sensitive data (only used when mysql.enabled=false)
  secrets:
    database:
      username: "external_user"
      password: "external_password"
    javaOpts: "-Xms256m -Xmx512m"
    additional: {}

  service:
    type: ClusterIP
    port: 8801
    targetPort: 8801

  ingress:
    enabled: true
    className: nginx
    annotations:
      kubernetes.io/ingress.class: nginx
    hosts:
      - host: client.marouanedbibih.engineer
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: client-tls
        hosts:
          - client.marouanedbibih.engineer
